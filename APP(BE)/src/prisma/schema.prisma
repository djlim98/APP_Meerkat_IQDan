// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId         BigInt          @id @default(autoincrement())
  uid             String          @unique
  password        String 
  name            String
  serviceNumber   String          @unique
  affiliatedUnit  String?
  militaryRank    String?
  image           String?
  enlistmentDate  DateTime?

  chatrooms       UsersOnChatrooms[]

  messages        Message[]

  followedBy      Friends[]       @relation("following")
  following       Friends[]       @relation("follower")
}

model Friends {
  follower        User            @relation("follower", fields: [followerId], references: [userId])
  followerId      BigInt

  following       User            @relation("following", fields: [followingId], references: [userId])
  followingId     BigInt

  @@id([followerId, followingId])
}

model UsersOnChatrooms{
  chatroom        Chatroom        @relation(fields: [chatroomId], references: [chatroomId])
  chatroomId      BigInt

  user            User            @relation(fields: [userId], references: [userId])
  userId          BigInt

  @@id([chatroomId, userId])
}

enum ChatroomType{
  SECRET
  AIRTIGHT
}

model Chatroom{
  chatroomId      BigInt          @id @default(autoincrement())
  name            String?
  type            ChatroomType    @default(SECRET)
  createDate      DateTime        @default(now())
  updateDate      DateTime?       @updatedAt

  users           UsersOnChatrooms[]

  notices         Notice[]

  messages        Message[]
}

model Notice{
  noticeId        BigInt          @id @default(autoincrement())
  title           String            
  content         String
  startDate       DateTime        @default(now())
  endDate         DateTime?
  category        String?

  belongChatRoom      Chatroom        @relation(fields: [belongChatRoomId], references: [chatroomId])          
  belongChatRoomId    BigInt
}

model Message{
  messageId           BigInt          @id @default(autoincrement())
  content             String
  sendTime            DateTime        @default(now())

  sender              User            @relation(fields: [senderId], references: [userId])
  senderId            BigInt

  belongChatRoom      Chatroom        @relation(fields: [belongChatRoomId], references: [chatroomId])          
  belongChatRoomId    BigInt
}